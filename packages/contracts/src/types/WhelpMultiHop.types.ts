/**
* This file was automatically generated by @cosmwasm/ts-codegen@0.35.3.
* DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
* and run the @cosmwasm/ts-codegen generate command to regenerate this file.
*/

export interface InstantiateMsg {
  dex_factory: string;
}
export type ExecuteMsg = {
  receive: Cw20ReceiveMsg;
} | {
  execute_swap_operations: {
    max_spread?: Decimal | null;
    minimum_receive?: Uint128 | null;
    operations: SwapOperation[];
    receiver?: string | null;
    referral_address?: string | null;
    referral_commission?: Decimal | null;
  };
} | {
  execute_swap_operation: {
    max_spread?: Decimal | null;
    operation: SwapOperation;
    receiver?: string | null;
    referral_address?: string | null;
    referral_commission?: Decimal | null;
    single: boolean;
  };
} | {
  assert_minimum_receive: {
    asset_info: AssetInfo;
    minimum_receive: Uint128;
    prev_balance: Uint128;
    receiver: string;
  };
};
export type Uint128 = string;
export type Binary = string;
export type Decimal = string;
export type SwapOperation = {
  dex_swap: {
    ask_asset_info: AssetInfo;
    offer_asset_info: AssetInfo;
  };
};
export type AssetInfo = {
  cw20_token: string;
} | {
  smart_token: string;
};
export interface Cw20ReceiveMsg {
  amount: Uint128;
  msg: Binary;
  sender: string;
}
export type QueryMsg = {
  config: {};
} | {
  simulate_swap_operations: {
    offer_amount: Uint128;
    operations: SwapOperation[];
    referral: boolean;
    referral_commission?: Decimal | null;
  };
} | {
  simulate_reverse_swap_operations: {
    ask_amount: Uint128;
    operations: SwapOperation[];
    referral: boolean;
    referral_commission?: Decimal | null;
  };
};
export interface ConfigResponse {
  dex_factory: string;
}
export type AssetInfoValidated = {
  cw20_token: Addr;
} | {
  smart_token: string;
};
export type Addr = string;
export interface SimulateSwapOperationsResponse {
  amount: Uint128;
  commission_amounts: AssetValidated[];
  referral_amount: AssetValidated;
  spread: Decimal;
  spread_amounts: AssetValidated[];
}
export interface AssetValidated {
  amount: Uint128;
  info: AssetInfoValidated;
}